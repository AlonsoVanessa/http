#
#   PHP
#
defineComponent() {
	local path name search ver imports libs iflags extensions file resolved

    path=$1
    ver="latest"

    path=`probe --path "$path" --partial "extensions/php/$ver" --search "$search" $name`
    if [ "$path" = "" ] ; then
        warnComponent $name
        return
	fi

    if [ "$path" != "" ] ; then
        libpaths=`probe --name libphp --search "$path" "libphp" `
        iflags=-I`probe --name php.h --search "$path" "php.h"`

    elif [ $BLD_HOST_OS = WIN ] ; then
        extensions="dll lib"
        if [ -x $path/Release_TS ] ; then
            imports="$path/Release_TS/php5ts"
        else 
            imports="$path/Release/php5"
        fi
        libs="php5"
    elif [ $BLD_HOST_OS = MACOSX ] ; then
        extensions="a dylib"
        imports="$path/libs/libphp5"
        libs="php5"
    else
        extensions="so a"
        imports="$path/libs/libphp5"
        libs="php5"
    fi

#    resolved=
#    for f in $imports
#    do
#        for ext in $extensions
#        do
#            file="${f}.${ext}"
#            if [ -f "$file" ] ; then 
#                break
#            fi
#        done
#        if [ ! -f "$file" ] ; then 
#            warnComponent $name "Can't locate $file"
#            return
#        fi
#        resolved="${resolved} ${file}"
#    done
#    configureComponent --path "$path" --dependencies "mpr" --imports "$resolved" --withlibs "$libs" \
#        --libs "$libs" --iflags "$iflags" $name

    iflags="${iflags} -I$path/main -I$path/Zend -I$path/TSRM"
    configureComponent --path "$path" --dependencies "mpr" --withlibs "$libs" --libs "$libs" --libpaths "$libpaths" \
        --iflags "$iflags" php
}
