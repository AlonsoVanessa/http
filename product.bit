/*
    product.bit -- Product Bit File for the Embedthis Http Library
 */

Bit.load({
    blend: [
        "src/deps/mpr/mpr.bit",
        "src/deps/pcre/pcre.bit",
        "${BITS}/embedthis.bit",
    ],
    '+modules': [ ],

    settings: {
        /* Default settings overridden by build.bit */
		product: 'http',
		title: 'Http Library',
        company: 'Embedthis',
		version: '1.0.0',
		buildNumber: 'B2',
        sync: ['mpr'],
    },

    usage: {
        debug: 'Enable a debug build',
        assert: 'Enable program assertions',
    },

    profiles: {
        debug: { settings: { 
            debug: true, 
            assert: true,
        }, },
        release: { settings: { 
            debug: false, 
            assert: false,
        } },
    },

    '+required': [ 'pcre' ],
    '+optional': [ 'doxygen', 'dsi', 'ejs', 'man', 'man2html', 'openssl', 'matrixssl', 'utest' ],

    defaults: {
        '+includes': [ 'src' ]
    },

    targets: {
        libhttp: {
            type: 'lib',
            sources: [ 'src/*.c' ],
            depends: [ 'libmpr', 'libpcre', 'libmprssl' ],
        },

        http: {
            type: 'exe',
            depends: [ 'libhttp' ],
            sources: [ 'src/utils/http.c' ],
        },

        package: {
            depends: ['build'],
            action: "
                let d = bit.dir.pkg.join('${settings.product}-${settings.version}')
                safeRemove(bit.dir.pkg)
                install('package/http.bit', d.join('src/deps/http/http.bit'), {hidden: true})
                install('package/Makefile', d.join('src/deps/http/Makefile'), {hidden: true})
                install(['doc/api/http.html', 'doc/api/httpBare.html', 'doc/api/http*.tags', 'doc/api/http.dtags'],
                    d.join('doc/api'))
                install('doc/man/http.1', d.join('doc/man/http.1'))
                install(['src/http.h', 'src/utils/http.c'], d.join('src/deps/http'))
                install('src/*.c', d.join('src/deps/http/httpLib.c'), {
                    cat: true,
                    filter: /^#inc.*http.*$/mg,
                    header: '#include \"http.h\"',
                    title: bit.settings.title + ' Library Source',
                })
                package(['combo', 'flat'])
            ",
        },
	},
})
