/*
    main.me -- MakeMe file for the Embedthis Http Library
 */

Me.load({
    plugins: [ 'configuration', 'package' ],

    blend: [
        'mpr',
        'pcre',
        'src/http.me',
        'test/test.me',
        'doc/doc.me',
    ],

    configure: {
        requires:  [ 'osdep', 'mpr', 'pcre' ],
        discovers: [ 'ssl', ],
    },

    customize: [
        /* Optionally load this if present. Feel free to create and customize */
        'custom.me',
    ],

    settings: {
        me: '=>0.8.4',
        integrate: true,
        prefixes: 'package-prefixes',
    
        http: {
            pam: true,
            webSockets: true,
        },
        est: {
            camellia: false,
            padlock: false,
            sslServer: false,
            des: false,
            testCerts: false,
            xtea: false,
            romTables: false,
            genPrime: false,
        },
    },

    scripts: {
        loaded: `
            me.targets.makerom.enable = false
        `,
    },

    usage: {
        'http.pam': 'Enable Unix Pluggable Auth Module (true|false)',                              
        'http.webSockets': 'Enable WebSockets (true|false)',                              
    },

    targets: {
        'http-ca-crt': {
            type: 'file',
            files: [ 'src/paks/est/ca.crt' ],
            path: '${BIN}/ca.crt',
        },

        projects: {
            action: `genProjects('-with openssl')`,
        },
    },

    manifest: {
        packages: {
            pak: {
                inherit:    'package-manifest',
                prefixes:   [ 'src'],
                sets:       [ 'pak' ],
            },
        },
        sets: { 
            pak: [
                {   
                    from:       'package/http.me', 
                    to:         '${src}/http.me',

                }, {
                    from:       [
                                    'src/http.h', 
                                    'src/http.c'
                                ],
                    to:         '${src}/',
                    flatten:    true,

                }, {
                    from:       ['src/service.c', 'src/*.c'],
                    exclude:    /http.c/,
                    to:         '${src}/httpLib.c',
                    append:     true,
                    filter:     /^#inc.*http.*$/mg,
                    header:     '/*\n * ${settings.title} Library Source\n */\n\n#include \"http.h\"',
                    divider:    true,

                }, {
                    from:       ['doc/api/http.html', 'doc/api/http*.tags', 'doc/api/http.dtags'],
                    to:         '${src}/doc/api/',
                    relative:   'doc/api',

                }, {
                    from:       'doc/documents/man/http.1',
                    to:         '${src}/doc/documents/man/',
                    relative:   'doc/documents/man',

                }, {
                    from:       'src/paks/est/ca.crt',
                    to:         '${src}/ca.crt',

                },
            ],
        },
	},
})
